class Solution:
    def maxResult(self, nums: List[int], k: int) -> int:
            
#         n = len(nums)
#         dp = [0 for _ in range(n)]
#         dp[-1] = nums[-1]
#         for i in range(n - 2, -1, -1):
#             dp[i] = nums[i] + max(dp[i + 1: i + k + 1] or [0])
#         return dp[0]
    
        n = len(nums)
        q = deque()
        q.append(0)
        dp = [0] * n
        dp[0] = nums[0]
        for i in range(1, n):
            dp[i] = nums[i] + dp[q[0]]
            if q[0] < i - k + 1:
                q.popleft()
            while q and dp[q[-1]] < dp[i]:
                q.pop()
            q.append(i)
        return dp[-1]
