class Solution:
    def numSubseq(self, nums: List[int], target: int) -> int:
#         1. sort nums;
#         2. use two pointers, i = 0, j = len(nums) - 1;
#         3. while i <= j:
#             3.1. if nums[i] + nums[j] > target, j -= 1 to reduce maximum;
#             3.2. else:
#                 update result += all possible subsequences, which is 2 ** (j - i) % mod;
#                 update i += 1
#         4. return result
#         Time: O(nlogn), Space: O(1)
        
        nums.sort()
        i, j, mod, res = 0, len(nums) - 1, 10 ** 9 + 7, 0
        while i <= j:
            if nums[i] + nums[j] > target:
                j -= 1
            else:
                res += pow(2, j - i, mod)
                i += 1
        return res % mod
    
