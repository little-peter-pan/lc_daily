# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def longestUnivaluePath(self, root: TreeNode) -> int:
        self.res = 0
        def helper(node):
            if not node: return 0
            left_length = helper(node.left)
            right_length = helper(node.right)
            left, right = 0, 0
            if node.left and node.left.val == node.val:
                left = 1 + left_length
            if node.right and node.right.val == node.val:
                right = 1 + right_length
            self.res = max(self.res, left + right)
            return max(left, right)
        helper(root)
        return self.res
    
